// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import domain "github.com/nestybox/sysvisor/sysvisor-fs/domain"
import mock "github.com/stretchr/testify/mock"
import time "time"

// ContainerStateService is an autogenerated mock type for the ContainerStateService type
type ContainerStateService struct {
	mock.Mock
}

// ContainerAdd provides a mock function with given fields: c
func (_m *ContainerStateService) ContainerAdd(c domain.ContainerIface) error {
	ret := _m.Called(c)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.ContainerIface) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ContainerCreate provides a mock function with given fields: id, pid, hostname, pidNsInode, ctime, uidFirst, uidSize, gidFirst, gidSize
func (_m *ContainerStateService) ContainerCreate(id string, pid uint32, hostname string, pidNsInode uint64, ctime time.Time, uidFirst uint32, uidSize uint32, gidFirst uint32, gidSize uint32) domain.ContainerIface {
	ret := _m.Called(id, pid, hostname, pidNsInode, ctime, uidFirst, uidSize, gidFirst, gidSize)

	var r0 domain.ContainerIface
	if rf, ok := ret.Get(0).(func(string, uint32, string, uint64, time.Time, uint32, uint32, uint32, uint32) domain.ContainerIface); ok {
		r0 = rf(id, pid, hostname, pidNsInode, ctime, uidFirst, uidSize, gidFirst, gidSize)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.ContainerIface)
		}
	}

	return r0
}

// ContainerDelete provides a mock function with given fields: c
func (_m *ContainerStateService) ContainerDelete(c domain.ContainerIface) error {
	ret := _m.Called(c)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.ContainerIface) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ContainerLookupById provides a mock function with given fields: id
func (_m *ContainerStateService) ContainerLookupById(id string) domain.ContainerIface {
	ret := _m.Called(id)

	var r0 domain.ContainerIface
	if rf, ok := ret.Get(0).(func(string) domain.ContainerIface); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.ContainerIface)
		}
	}

	return r0
}

// ContainerLookupByPid provides a mock function with given fields: pidInode
func (_m *ContainerStateService) ContainerLookupByPid(pidInode uint64) domain.ContainerIface {
	ret := _m.Called(pidInode)

	var r0 domain.ContainerIface
	if rf, ok := ret.Get(0).(func(uint64) domain.ContainerIface); ok {
		r0 = rf(pidInode)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.ContainerIface)
		}
	}

	return r0
}

// ContainerUpdate provides a mock function with given fields: c
func (_m *ContainerStateService) ContainerUpdate(c domain.ContainerIface) error {
	ret := _m.Called(c)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.ContainerIface) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
