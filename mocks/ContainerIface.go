//
// Copyright: (C) 2019 Nestybox Inc.  All rights reserved.
//

// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import time "time"

// ContainerIface is an autogenerated mock type for the ContainerIface type
type ContainerIface struct {
	mock.Mock
}

// Ctime provides a mock function with given fields:
func (_m *ContainerIface) Ctime() time.Time {
	ret := _m.Called()

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// Data provides a mock function with given fields: path, name
func (_m *ContainerIface) Data(path string, name string) (string, bool) {
	ret := _m.Called(path, name)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(path, name)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string, string) bool); ok {
		r1 = rf(path, name)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// GID provides a mock function with given fields:
func (_m *ContainerIface) GID() uint32 {
	ret := _m.Called()

	var r0 uint32
	if rf, ok := ret.Get(0).(func() uint32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint32)
	}

	return r0
}

// Hostname provides a mock function with given fields:
func (_m *ContainerIface) Hostname() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ID provides a mock function with given fields:
func (_m *ContainerIface) ID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// InitPid provides a mock function with given fields:
func (_m *ContainerIface) InitPid() uint32 {
	ret := _m.Called()

	var r0 uint32
	if rf, ok := ret.Get(0).(func() uint32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint32)
	}

	return r0
}

// PidInode provides a mock function with given fields:
func (_m *ContainerIface) PidInode() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// SetData provides a mock function with given fields: path, name, data
func (_m *ContainerIface) SetData(path string, name string, data string) {
	_m.Called(path, name, data)
}

// String provides a mock function with given fields:
func (_m *ContainerIface) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// UID provides a mock function with given fields:
func (_m *ContainerIface) UID() uint32 {
	ret := _m.Called()

	var r0 uint32
	if rf, ok := ret.Get(0).(func() uint32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint32)
	}

	return r0
}
